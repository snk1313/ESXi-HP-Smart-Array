<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.2</version>
    <date>2021-12-17T00:00:00Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template ESXi HP Smart Array Fast</template>
            <name>Template ESXi HP Smart Array Fast</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>HP Smart Array</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Smart Array: Data Retrieval</name>
                    <type>SSH</type>
                    <key>ssh.run[hpraid.data.retrieval]</key>
                    <delay>120</delay>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <params>data_tmp=&quot;/tmp/hp-raid-data-harvester.tmp&quot;
data_out=&quot;/tmp/hp-raid-data-harvester.out&quot;
hpacucli=&quot;/opt/smartstorageadmin/ssacli/bin/ssacli&quot;
ctrl_list=$(${hpacucli} ctrl all show |grep -oE 'Slot [0-9]+.*?' |awk '{print $2}' |xargs echo)

echo -n &gt; $data_tmp

# Get adapters list and get info about each.
echo &quot;### ctrl section begin ###&quot; &gt;&gt; $data_tmp
for slot in $ctrl_list;
  do
    echo &quot;### ctrl begin $slot ###&quot; &gt;&gt; $data_tmp
    $hpacucli ctrl slot=$slot show &gt;&gt; $data_tmp
    echo &quot;### ctrl end $slot ###&quot; &gt;&gt; $data_tmp
  done
echo &quot;### ctrl section end ###&quot; &gt;&gt; $data_tmp

# enumerate all adapters and all logical drives on each adapter.
echo &quot;### ld section begin ###&quot; &gt;&gt; $data_tmp
for slot in $ctrl_list;
  do
    ld_list=$($hpacucli ctrl slot=$slot ld all show |grep -w logicaldrive |awk '{print $2}' |xargs echo)
  for ld in $ld_list;
    do
      echo &quot;### ld begin $slot $ld  ###&quot; &gt;&gt; $data_tmp
      $hpacucli ctrl slot=$slot ld $ld show &gt;&gt; $data_tmp
      echo &quot;### ld end $slot $ld ###&quot; &gt;&gt; $data_tmp
    done
  done
echo &quot;### ld section end ###&quot; &gt;&gt; $data_tmp

# enumerate all adapters and all physical drives on each adapter.
echo &quot;### pd section begin ###&quot; &gt;&gt; $data_tmp
for slot in $ctrl_list;
  do
    pd_list=$($hpacucli ctrl slot=$slot pd all show |grep -w physicaldrive |awk '{print $2}' |xargs echo)
  for pd in $pd_list;
    do
      echo &quot;### pd begin $slot $pd ###&quot; &gt;&gt; $data_tmp
      $hpacucli ctrl slot=$slot pd $pd show &gt;&gt; $data_tmp
      echo &quot;### pd end $slot $pd ###&quot; &gt;&gt; $data_tmp
    done
  done
echo &quot;### pd section end ###&quot; &gt;&gt; $data_tmp

mv $data_tmp $data_out

echo &quot;OK&quot;</params>
                    <username>{$ZABBIX_SSH_USER}</username>
                    <password>{$ZABBIX_SSH_PASS}</password>
                    <applications>
                        <application>
                            <name>HP Smart Array</name>
                        </application>
                    </applications>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Controllers Discovery</name>
                    <type>SSH</type>
                    <key>ssh.run[hpraid.ctrl.discovery]</key>
                    <delay>120</delay>
                    <params>data=&quot;/tmp/hp-raid-data-harvester.out&quot;

if [ -f &quot;$data&quot; ]; then
  ctrl_list=$(sed -n -e '/ctrl section begin/,/ctrl section end/p' $data |grep -oE 'Slot [0-9]+.*?' |awk '{print $2}')
  else echo &quot;$data not found.&quot;; exit 1
fi

echo -n '{&quot;data&quot;:['
for ctrl in $ctrl_list; do echo -n &quot;{\&quot;{#CTRL_SLOT}\&quot;: \&quot;$ctrl\&quot;},&quot;; done |sed -e 's:\},$:\}:'
echo -n ']}'</params>
                    <username>{$ZABBIX_SSH_USER}</username>
                    <password>{$ZABBIX_SSH_PASS}</password>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#CTRL_SLOT}</macro>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Smart Array: Battery status on slot {#CTRL_SLOT}</name>
                            <type>SSH</type>
                            <key>ssh.run[hpraid.bbu.status.{#CTRL_SLOT}]</key>
                            <delay>120</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <params>output=$(sed -n -e &quot;/ctrl begin {#CTRL_SLOT}/,/ctrl end {#CTRL_SLOT}/p&quot; /tmp/hp-raid-data-harvester.out |grep -wE &quot;[ ]+Battery/Capacitor Status:&quot; |awk '{print $3}')
if [ -z $output ]; then
  echo &quot;Not available&quot;
else
  echo &quot;$output&quot;
fi</params>
                            <username>{$ZABBIX_SSH_USER}</username>
                            <password>{$ZABBIX_SSH_PASS}</password>
                            <applications>
                                <application>
                                    <name>HP Smart Array</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(OK|Not available)}=0</expression>
                                    <name>Smart Array: Controller Battery in slot {#CTRL_SLOT} state is {ITEM.LASTVALUE}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Smart Array: Cache $2 status on slot {#CTRL_SLOT}</name>
                            <type>SSH</type>
                            <key>ssh.run[hpraid.cache.status.{#CTRL_SLOT}]</key>
                            <delay>120</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <params>output=$(sed -n -e &quot;/ctrl begin {#CTRL_SLOT}/,/ctrl end {#CTRL_SLOT}/p&quot; /tmp/hp-raid-data-harvester.out |grep -wE &quot;[ ]+Cache Status:&quot; |awk '{print $3}')
if [ -z $output ]; then
  echo &quot;Not available&quot;
else
  echo &quot;$output&quot;
fi</params>
                            <username>{$ZABBIX_SSH_USER}</username>
                            <password>{$ZABBIX_SSH_PASS}</password>
                            <applications>
                                <application>
                                    <name>HP Smart Array</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(OK|Not available)}=0</expression>
                                    <name>Smart Array: Controller Cache in slot {#CTRL_SLOT} state is {ITEM.LASTVALUE}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Smart Array: Controller status on slot {#CTRL_SLOT}</name>
                            <type>SSH</type>
                            <key>ssh.run[hpraid.ctrl.status.{#CTRL_SLOT}]</key>
                            <delay>120</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <params>sed -n -e &quot;/ctrl begin {#CTRL_SLOT}/,/ctrl end {#CTRL_SLOT}/p&quot; /tmp/hp-raid-data-harvester.out |grep -wE &quot;[ ]+Controller Status:&quot; |awk '{print $3}'</params>
                            <username>{$ZABBIX_SSH_USER}</username>
                            <password>{$ZABBIX_SSH_PASS}</password>
                            <applications>
                                <application>
                                    <name>HP Smart Array</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(OK)}=0</expression>
                                    <name>Smart Array: Controller in slot {#CTRL_SLOT} state is {ITEM.LASTVALUE}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{nodata(1h)}=1</expression>
                                    <name>Smart Array: No controller data received for &gt;1h</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Logical Volumes Discovery</name>
                    <type>SSH</type>
                    <key>ssh.run[hpraid.ld.discovery]</key>
                    <delay>120</delay>
                    <params>data=&quot;/tmp/hp-raid-data-harvester.out&quot;

if [ -f $data ]; then
  ld_list=$(sed -n -e '/ld section begin/,/ld section end/p' $data |grep -w 'ld begin' |awk '{OFS=&quot;:&quot;} {print $4,$5}')
  else echo &quot;$data not found.&quot;; exit 1
fi

echo -n '{&quot;data&quot;:['
  for ld in $ld_list; do echo -n &quot;{\&quot;{#LD}\&quot;:\&quot;$ld\&quot;},&quot;; done |sed -e 's:\},$:\}:'
echo -n ']}'</params>
                    <username>{$ZABBIX_SSH_USER}</username>
                    <password>{$ZABBIX_SSH_PASS}</password>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#LD}</macro>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Logical volume $1 status</name>
                            <type>SSH</type>
                            <key>ssh.run[hpraid.ld.status.{#LD}]</key>
                            <delay>120</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <params>slot=$(echo &quot;{#LD}&quot; | cut -d &quot;:&quot; -f 1)
ld=$(echo &quot;{#LD}&quot; | cut -d &quot;:&quot; -f 2)
sed -n -e &quot;/ld begin $slot $ld/,/ld end $slot $ld/p&quot; /tmp/hp-raid-data-harvester.out |grep -wE &quot;[ ]+Status:&quot; |awk '{print $2}'</params>
                            <username>{$ZABBIX_SSH_USER}</username>
                            <password>{$ZABBIX_SSH_PASS}</password>
                            <applications>
                                <application>
                                    <name>HP Smart Array</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{str(OK)}=0</expression>
                                    <name>Smart Array: Logical Volume state is {ITEM.LASTVALUE} on {HOSTNAME}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Physical Drives Discovery</name>
                    <type>SSH</type>
                    <key>ssh.run[hpraid.pd.discovery]</key>
                    <delay>120</delay>
                    <params>data=&quot;/tmp/hp-raid-data-harvester.out&quot;

if [ -f $data ]; then
  pd_list=$(sed -n -e '/pd section begin/,/pd section end/p' $data |grep -w 'pd begin' |awk '{OFS=&quot;:&quot;} {print $4,$5}')
  else echo &quot;$data not found.&quot;; exit 1
fi

echo -n '{&quot;data&quot;:['
  for pd in $pd_list; do echo -n &quot;{\&quot;{#PD}\&quot;:\&quot;$pd\&quot;},&quot;; done |sed -e 's:\},$:\}:'
echo -n ']}'</params>
                    <username>{$ZABBIX_SSH_USER}</username>
                    <password>{$ZABBIX_SSH_PASS}</password>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#PD}</macro>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Physical drive {#PD} status</name>
                            <type>SSH</type>
                            <key>ssh.run[hpraid.pd.status.{#PD}]</key>
                            <delay>120</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <params>slot=$(echo &quot;{#PD}&quot; | cut -d &quot;:&quot; -f 1)
pd=$(echo &quot;{#PD}&quot; | cut -d &quot;:&quot; -f 2-)
sed -n -e &quot;/pd begin $slot $pd/,/pd end $slot $pd/p&quot; /tmp/hp-raid-data-harvester.out |grep -wE '[ ]+Status:' |awk '{print $2}'</params>
                            <username>{$ZABBIX_SSH_USER}</username>
                            <password>{$ZABBIX_SSH_PASS}</password>
                            <applications>
                                <application>
                                    <name>HP Smart Array</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{str(OK)}=0</expression>
                                    <name>Smart Array: Disk state is {ITEM.LASTVALUE} on {HOSTNAME}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Physical drive {#PD} temperature</name>
                            <type>SSH</type>
                            <key>ssh.run[hpraid.pd.temperature.{#PD}]</key>
                            <delay>120</delay>
                            <history>7d</history>
                            <params>slot=$(echo &quot;{#PD}&quot; | cut -d &quot;:&quot; -f 1)
pd=$(echo &quot;{#PD}&quot; | cut -d &quot;:&quot; -f 2-)
sed -n -e &quot;/pd begin $slot $pd/,/pd end $slot $pd/p&quot; /tmp/hp-raid-data-harvester.out |grep -wE '[ ]+Current Temperature \(C\):' |awk '{print $4}'</params>
                            <username>{$ZABBIX_SSH_USER}</username>
                            <password>{$ZABBIX_SSH_PASS}</password>
                            <applications>
                                <application>
                                    <name>HP Smart Array</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;35</expression>
                                    <name>Smart Array: Disk temperature is more than {ITEM.LASTVALUE} on {HOSTNAME}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{last()}&gt;40</expression>
                                    <name>Smart Array: Disk temperature is more than {ITEM.LASTVALUE} on {HOSTNAME}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$ZABBIX_SSH_PASS}</macro>
                    <value>zabbixPassword</value>
                </macro>
                <macro>
                    <macro>{$ZABBIX_SSH_USER}</macro>
                    <value>zabbixUsername</value>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
